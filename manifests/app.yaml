---
# Source: compose-deployer/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: deployment-db
  labels:
    app.kubernetes.io/name: db
    app.kubernetes.io/instance: RELEASE-NAME
    helm.sh/chart: compose-deployer-0.2.1
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    com.docker.compose.project: votingapp
    com.docker.compose.service: db
---
# Source: compose-deployer/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: deployment-redis
  labels:
    app.kubernetes.io/name: redis
    app.kubernetes.io/instance: RELEASE-NAME
    helm.sh/chart: compose-deployer-0.2.1
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    com.docker.compose.project: votingapp
    com.docker.compose.service: redis
---
# Source: compose-deployer/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: deployment-result
  labels:
    app.kubernetes.io/name: result
    app.kubernetes.io/instance: RELEASE-NAME
    helm.sh/chart: compose-deployer-0.2.1
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    com.docker.compose.project: votingapp
    com.docker.compose.service: result
---
# Source: compose-deployer/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: deployment-vote
  labels:
    app.kubernetes.io/name: vote
    app.kubernetes.io/instance: RELEASE-NAME
    helm.sh/chart: compose-deployer-0.2.1
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    example.com/foo: bar
    com.docker.compose.project: votingapp
    com.docker.compose.service: vote
---
# Source: compose-deployer/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: deployment-worker
  labels:
    app.kubernetes.io/name: worker
    app.kubernetes.io/instance: RELEASE-NAME
    helm.sh/chart: compose-deployer-0.2.1
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    com.docker.compose.project: votingapp
    com.docker.compose.service: worker
---
# Source: compose-deployer/templates/docker-project.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: sh.helm.release.v1.votingapp
  labels:
    name: votingapp
    owner: helm
data:
  release: eyJpbmZvIjp7InN0YXR1cyI6ImRlcGxveWVkIn0sIm5hbWUiOiJ2b3RpbmdhcHAiLCJ2ZXJzaW9uIjoxfQ==
---
# Source: compose-deployer/templates/service.yaml
apiVersion: v1
kind: Service
metadata: 
  name: db
  labels:
    app.kubernetes.io/name: db
    app.kubernetes.io/instance: RELEASE-NAME
    helm.sh/chart: compose-deployer-0.2.1
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    com.docker.compose.project: votingapp
    com.docker.compose.service: db
spec:
  type: ClusterIP
  ports:
    - port: 5432
      targetPort: 5432
  selector:
    app.kubernetes.io/name: db
    app.kubernetes.io/instance: RELEASE-NAME
---
# Source: compose-deployer/templates/service.yaml
apiVersion: v1
kind: Service
metadata: 
  name: redis
  labels:
    app.kubernetes.io/name: redis
    app.kubernetes.io/instance: RELEASE-NAME
    helm.sh/chart: compose-deployer-0.2.1
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    com.docker.compose.project: votingapp
    com.docker.compose.service: redis
spec:
  type: ClusterIP
  ports:
    - port: 6379
      targetPort: 6379
  selector:
    app.kubernetes.io/name: redis
    app.kubernetes.io/instance: RELEASE-NAME
---
# Source: compose-deployer/templates/service.yaml
apiVersion: v1
kind: Service
metadata: 
  name: result
  labels:
    app.kubernetes.io/name: result
    app.kubernetes.io/instance: RELEASE-NAME
    helm.sh/chart: compose-deployer-0.2.1
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    com.docker.compose.project: votingapp
    com.docker.compose.service: result
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 80
  selector:
    app.kubernetes.io/name: result
    app.kubernetes.io/instance: RELEASE-NAME
---
# Source: compose-deployer/templates/service.yaml
apiVersion: v1
kind: Service
metadata: 
  name: vote
  labels:
    app.kubernetes.io/name: vote
    app.kubernetes.io/instance: RELEASE-NAME
    helm.sh/chart: compose-deployer-0.2.1
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    example.com/foo: bar
    com.docker.compose.project: votingapp
    com.docker.compose.service: vote
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 80
  selector:
    app.kubernetes.io/name: vote
    app.kubernetes.io/instance: RELEASE-NAME
---
# Source: compose-deployer/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata: 
  name: db
  labels:
    app.kubernetes.io/name: db
    app.kubernetes.io/instance: RELEASE-NAME
    helm.sh/chart: compose-deployer-0.2.1
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    com.docker.compose.project: votingapp
    com.docker.compose.service: db
spec:
  replicas: 
  selector:
    matchLabels:
      app.kubernetes.io/name: db
      app.kubernetes.io/instance: RELEASE-NAME
  template:
    metadata:
      labels:
        app.kubernetes.io/name: db
        app.kubernetes.io/instance: RELEASE-NAME
        helm.sh/chart: compose-deployer-0.2.1
        app.kubernetes.io/version: "1.16.0"
        app.kubernetes.io/managed-by: Helm
        com.docker.compose.project: votingapp
        com.docker.compose.service: db
    spec:
      serviceAccountName: deployment-db
      containers:
        - name: db
          image: postgres:9.6
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_PASSWORD
              value: postgres
            - name: POSTGRES_USER
              value: postgres
---
# Source: compose-deployer/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata: 
  name: redis
  labels:
    app.kubernetes.io/name: redis
    app.kubernetes.io/instance: RELEASE-NAME
    helm.sh/chart: compose-deployer-0.2.1
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    com.docker.compose.project: votingapp
    com.docker.compose.service: redis
spec:
  replicas: 
  selector:
    matchLabels:
      app.kubernetes.io/name: redis
      app.kubernetes.io/instance: RELEASE-NAME
  template:
    metadata:
      labels:
        app.kubernetes.io/name: redis
        app.kubernetes.io/instance: RELEASE-NAME
        helm.sh/chart: compose-deployer-0.2.1
        app.kubernetes.io/version: "1.16.0"
        app.kubernetes.io/managed-by: Helm
        com.docker.compose.project: votingapp
        com.docker.compose.service: redis
    spec:
      serviceAccountName: deployment-redis
      containers:
        - name: redis
          image: redis:alpine
          args:
            - redis-server
            - --appendonly
            - "yes"
          ports:
            - containerPort: 6379
---
# Source: compose-deployer/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata: 
  name: result
  labels:
    app.kubernetes.io/name: result
    app.kubernetes.io/instance: RELEASE-NAME
    helm.sh/chart: compose-deployer-0.2.1
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    com.docker.compose.project: votingapp
    com.docker.compose.service: result
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: result
      app.kubernetes.io/instance: RELEASE-NAME
  template:
    metadata:
      labels:
        app.kubernetes.io/name: result
        app.kubernetes.io/instance: RELEASE-NAME
        helm.sh/chart: compose-deployer-0.2.1
        app.kubernetes.io/version: "1.16.0"
        app.kubernetes.io/managed-by: Helm
        com.docker.compose.project: votingapp
        com.docker.compose.service: result
    spec:
      serviceAccountName: deployment-result
      containers:
        - name: result
          image: dockersamples/examplevotingapp_result
          ports:
            - containerPort: 80
---
# Source: compose-deployer/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata: 
  name: vote
  labels:
    app.kubernetes.io/name: vote
    app.kubernetes.io/instance: RELEASE-NAME
    helm.sh/chart: compose-deployer-0.2.1
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    example.com/foo: bar
    com.docker.compose.project: votingapp
    com.docker.compose.service: vote
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: vote
      app.kubernetes.io/instance: RELEASE-NAME
  template:
    metadata:
      labels:
        app.kubernetes.io/name: vote
        app.kubernetes.io/instance: RELEASE-NAME
        helm.sh/chart: compose-deployer-0.2.1
        app.kubernetes.io/version: "1.16.0"
        app.kubernetes.io/managed-by: Helm
        example.com/foo: bar
        com.docker.compose.project: votingapp
        com.docker.compose.service: vote
        example.com/container-only: foobar
        example.com/container-only2: foobar
    spec:
      serviceAccountName: deployment-vote
      containers:
        - name: vote
          image: dockersamples/examplevotingapp_vote:before
          ports:
            - containerPort: 80
          env:
            - name: OPTION_A
              value: Ice cream
            - name: OPTION_B
              value: Cheesecake
---
# Source: compose-deployer/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata: 
  name: worker
  labels:
    app.kubernetes.io/name: worker
    app.kubernetes.io/instance: RELEASE-NAME
    helm.sh/chart: compose-deployer-0.2.1
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    com.docker.compose.project: votingapp
    com.docker.compose.service: worker
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: worker
      app.kubernetes.io/instance: RELEASE-NAME
  template:
    metadata:
      labels:
        app.kubernetes.io/name: worker
        app.kubernetes.io/instance: RELEASE-NAME
        helm.sh/chart: compose-deployer-0.2.1
        app.kubernetes.io/version: "1.16.0"
        app.kubernetes.io/managed-by: Helm
        com.docker.compose.project: votingapp
        com.docker.compose.service: worker
    spec:
      serviceAccountName: deployment-worker
      containers:
        - name: worker
          image: mikesir87/votingapp-worker
---
# Source: compose-deployer/templates/ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: result
  labels:
    app.kubernetes.io/name: result
    app.kubernetes.io/instance: RELEASE-NAME
    helm.sh/chart: compose-deployer-0.2.1
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    com.docker.compose.project: votingapp
    com.docker.compose.service: result
spec:
  rules:
    - host: "results.localhost"
      http:
        paths:
          - path: /
            backend:
              serviceName: result
              servicePort: 80
---
# Source: compose-deployer/templates/ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: vote
  labels:
    app.kubernetes.io/name: vote
    app.kubernetes.io/instance: RELEASE-NAME
    helm.sh/chart: compose-deployer-0.2.1
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    com.docker.compose.project: votingapp
    com.docker.compose.service: vote
spec:
  rules:
    - host: "vote.localhost"
      http:
        paths:
          - path: /
            backend:
              serviceName: vote
              servicePort: 80
